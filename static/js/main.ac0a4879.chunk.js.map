{"version":3,"sources":["Object.js","Game.js","Result.js","ObjectListing.js","Options.js","App.js","index.js"],"names":["ChoiceObject","object","handleChoiceClick","className","onClick","name","Game","objects","choices","map","index","Result","result","toggleShowResult","playerChoice","computerChoice","resetChoices","ObjectListing","removeObject","id","Options","addObject","newObject","length","beatsId","listings","beatsThisList","type","event","push","parseInt","target","onChange","Object","assign","value","App","useState","showGame","updateShowGame","showResult","updateShowResult","showOptions","updateShowOptions","updatePlayerChoice","updateComputerChoice","gameResult","updateGameResult","updateObjects","useEffect","didPlayerWin","includes","selectObject","selectedId","getRandomId","selectedObject","find","obj","max","Math","floor","random","console","log","newObjects","filter","newObjectList","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac0a4879.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ChoiceObject = ({ object, handleChoiceClick }) => {\r\n\r\n    //render object\r\n    return (\r\n        <div className=\"square\" onClick={() => {        \r\n            handleChoiceClick(object);\r\n        }}>{object.name}</div>\r\n    )\r\n}\r\n\r\nexport default ChoiceObject","import React from 'react'\r\nimport Object from './Object.js'\r\nimport './Game.css'\r\n\r\nconst Game = ({ objects, handleChoiceClick }) => {\r\n    //generate objects for player to choose from props      \r\n    const choices = objects.map((object, index) => {            \r\n        return <Object object={object} handleChoiceClick={handleChoiceClick } />\r\n    });\r\n    \r\n    //render game and objects\r\n    return (\r\n        <div className=\"game-container\">\r\n            <h2>Počítač</h2>\r\n            <div className=\"square\">?</div>\r\n            <div className=\"circle\"></div>\r\n            <h2>Hráč</h2>\r\n            <div className=\"selection-container\">\r\n                {choices}\r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game","import React from 'react'\r\nimport './Game.css'\r\n\r\nconst Result = ({ result, toggleShowResult, playerChoice, computerChoice, resetChoices }) => {\r\n    return (\r\n        <div className=\"game-container\">\r\n            <h1>{result}</h1>\r\n            <h2>{`Vybral jsi ${playerChoice.name}, počítač si vybral ${computerChoice.name}`}</h2>\r\n            <button onClick={() => {\r\n                toggleShowResult();\r\n                resetChoices();\r\n            }}>Hrát znova</button>\r\n        </div>\r\n    );\r\n }\r\n\r\nexport default Result","import React from 'react'\r\nimport './Game.css'\r\nconst ObjectListing = ({ object, removeObject }) => {\r\n    \r\n    //render object listing based on object being deletable\r\n    if (object.id === 1 || object.id === 2 || object.id === 3) {\r\n        return (\r\n            <div className=\"object-listing\">{object.name}</div>\r\n        )\r\n    } else { \r\n        return (\r\n            <div className=\"object-listing\">{object.name}<button onClick={() => { removeObject(object)}}>Smazat</button></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ObjectListing","import React, {useState} from 'react'\r\nimport ObjectListing from './ObjectListing'\r\nimport './Game.css'\r\n\r\nconst Options = ({ objects, removeObject, addObject }) => {\r\n\r\n    const newObject = {\r\n        id: (objects.length + 1),\r\n        name: '',\r\n        beatsId: [],\r\n    }\r\n\r\n    const listings = objects.map(object => { \r\n        return <ObjectListing object={object} removeObject={removeObject}/>\r\n    })\r\n\r\n    const beatsThisList = objects.map(object => {\r\n        return(\r\n            <div className=\"object-listing\">{object.name} <input id={object.id} type=\"checkbox\"onClick={(event) => {newObject.beatsId.push(parseInt(event.target.id)) }}></input></div>\r\n        )\r\n    })   \r\n\r\n    return (\r\n        <div className=\"game-container\">            \r\n            <h1>Objekty na výběr</h1>\r\n            <div>\r\n                {listings}\r\n            </div>\r\n            <h1>Přidat další</h1>\r\n            <div className=\"new-object-form\">\r\n                <h3 className=\"object-form-item\">Jméno</h3>\r\n                <input className=\"object-form-item\" onChange={(event) => {\r\n                    Object.assign(newObject, { name: event.target.value })                    \r\n                }}></input>                \r\n                <h3 className=\"object-form-item\">Poráží</h3>\r\n                {beatsThisList}\r\n                <button className=\"object-form-item\" onClick={() => { addObject(newObject) }}>Přidat další</button>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options","import React, { useState, useEffect } from 'react'\r\nimport Game from './Game.js'\r\nimport Result from './Result.js'\r\nimport Options from './Options.js'\r\nimport './App.css'\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [showGame, updateShowGame] = useState(false)\r\n    const [showResult, updateShowResult] = useState(false)\r\n    const [showOptions, updateShowOptions] = useState(false)\r\n    const [playerChoice, updatePlayerChoice] = useState()\r\n    const [computerChoice, updateComputerChoice] = useState()\r\n    const [gameResult, updateGameResult] = useState('')\r\n    const [objects, updateObjects] = useState(\r\n        [\r\n            {\r\n                id: 1,\r\n                name: 'kámen',\r\n                beatsId: [2]              \r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'nůžky',\r\n                beatsId: [3]               \r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'papír',\r\n                beatsId: [1]        \r\n            },            \r\n        ]\r\n    )\r\n    \r\n    //judge the result of the game then display it\r\n    const judgeTheHand = () => {\r\n        if (playerChoice && computerChoice) {\r\n            const didPlayerWin = playerChoice.beatsId.includes(computerChoice.id)          \r\n            if (didPlayerWin) { \r\n                updateGameResult('Vyhrál jsi!')\r\n            }\r\n            if (!didPlayerWin && playerChoice.id === computerChoice.id) { \r\n                updateGameResult('Remíza!')\r\n            }\r\n            if (!didPlayerWin && playerChoice.id !== computerChoice.id) {\r\n                updateGameResult('Prohrál jsi!')\r\n            }\r\n            toggleShowResult();\r\n        }\r\n    }\r\n\r\n\r\n    //trigger a function to judge the result of the game each time computer choice is updated (only happens after player has chosen an object or on restart), \r\n    //done in this way because updating state is asynchronous in react.js \r\n    useEffect(judgeTheHand, [computerChoice])\r\n\r\n    \r\n\r\n    //store player choice object in state when player clicks on an object, trigger computer to choose an object\r\n    const handleChoiceClick = (object) => {        \r\n        updatePlayerChoice(object)\r\n        selectObject();        \r\n    }\r\n\r\n    //computer selects object based on id generated by function get random id\r\n    const selectObject = () => {\r\n        const selectedId = getRandomId(objects.length)\r\n        \r\n        //find object in array of onjects by id\r\n        const selectedObject = objects.find(obj => {\r\n            return obj.id === selectedId\r\n        })\r\n\r\n        updateComputerChoice(selectedObject)\r\n    }\r\n\r\n    //generate random number between 1 and the number of choices\r\n    const getRandomId = (max) => {      \r\n        const roundedInteger =  Math.floor((Math.random()*max) + 1); \r\n        return roundedInteger\r\n    }\r\n\r\n    //reset state after display result\r\n    const resetChoices = () => {\r\n        updatePlayerChoice(null)\r\n        updateComputerChoice(null)\r\n    }\r\n\r\n    const toggleShowResult = () => {\r\n        updateShowResult(!showResult)\r\n    }\r\n\r\n    const removeObject = (object) => { \r\n        const newObjects = objects.filter(obj => { \r\n            return obj.id !== object.id\r\n        })\r\n        updateObjects(newObjects)\r\n    }\r\n\r\n    const addObject = (object) => {\r\n        console.log(object)\r\n        const newObjectList = objects.concat(object)\r\n        updateObjects(newObjectList)\r\n    }\r\n\r\n\r\n    //based on state either render main menu or game or the result of the game or options\r\n    if (!showGame && !showOptions) {\r\n        return (\r\n            <div className=\"main-view\">\r\n                <h1>Kámen, nůžky, papír & jiné</h1>\r\n                <div>\r\n                    <button onClick={() => { updateShowGame(true) }} className=\"main-view-button\">Začít</button>\r\n                    <button onClick={() => { updateShowOptions(true)}}className=\"main-view-button\">Nastavení</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    if (showGame) {\r\n        if (!showResult) {\r\n            return (\r\n                <div>\r\n                    <Game objects={objects} handleChoiceClick={handleChoiceClick} />\r\n                    <button onClick={() => {updateShowGame(false)}}className=\"exit-button\">Zpět</button>\r\n                    <button onClick={() => {\r\n                        console.log(playerChoice)\r\n                        console.log(computerChoice)\r\n                        console.log(showResult)\r\n                    }\r\n                    }>check state</button>\r\n                </div>\r\n            )\r\n        }\r\n        if (showResult) {\r\n            return (\r\n                <Result result={gameResult} toggleShowResult={toggleShowResult} playerChoice={playerChoice} computerChoice={computerChoice} resetChoices={resetChoices}/>\r\n            )\r\n        }\r\n    }\r\n    if (showOptions) { \r\n        return (\r\n            <div>\r\n                 <button onClick={() => {updateShowOptions(false)}}className=\"exit-button\">Zpět</button>\r\n                <Options objects={objects} removeObject={removeObject} addObject={addObject} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}