[{"C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\index.js":"1","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\App.js":"2","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Game.js":"3","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Object.js":"4","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Result.js":"5","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Options.js":"6","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\ObjectListing.js":"7"},{"size":228,"mtime":1610362214014,"results":"8","hashOfConfig":"9"},{"size":5205,"mtime":1610934696610,"results":"10","hashOfConfig":"9"},{"size":754,"mtime":1610931215001,"results":"11","hashOfConfig":"9"},{"size":294,"mtime":1610925181147,"results":"12","hashOfConfig":"9"},{"size":532,"mtime":1610927193971,"results":"13","hashOfConfig":"9"},{"size":1531,"mtime":1610933516871,"results":"14","hashOfConfig":"9"},{"size":542,"mtime":1610930931545,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1am8ldg",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\index.js",[],["33","34"],"C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\App.js",["35"],"import React, { useState, useEffect } from 'react'\r\nimport Game from './Game.js'\r\nimport Result from './Result.js'\r\nimport Options from './Options.js'\r\nimport './App.css'\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [showGame, updateShowGame] = useState(false)\r\n    const [showResult, updateShowResult] = useState(false)\r\n    const [showOptions, updateShowOptions] = useState(false)\r\n    const [playerChoice, updatePlayerChoice] = useState()\r\n    const [computerChoice, updateComputerChoice] = useState()\r\n    const [gameResult, updateGameResult] = useState('')\r\n    const [objects, updateObjects] = useState(\r\n        [\r\n            {\r\n                id: 1,\r\n                name: 'kámen',\r\n                beatsId: [2]              \r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'nůžky',\r\n                beatsId: [3]               \r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'papír',\r\n                beatsId: [1]        \r\n            },            \r\n        ]\r\n    )\r\n    \r\n    //judge the result of the game then display it\r\n    const judgeTheHand = () => {\r\n        if (playerChoice && computerChoice) {\r\n            const didPlayerWin = playerChoice.beatsId.includes(computerChoice.id)          \r\n            if (didPlayerWin) { \r\n                updateGameResult('Vyhrál jsi!')\r\n            }\r\n            if (!didPlayerWin && playerChoice.id === computerChoice.id) { \r\n                updateGameResult('Remíza!')\r\n            }\r\n            if (!didPlayerWin && playerChoice.id !== computerChoice.id) {\r\n                updateGameResult('Prohrál jsi!')\r\n            }\r\n            toggleShowResult();\r\n        }\r\n    }\r\n\r\n\r\n    //trigger a function to judge the result of the game each time computer choice is updated (only happens after player has chosen an object or on restart), \r\n    //done in this way because updating state is asynchronous in react.js \r\n    useEffect(judgeTheHand, [computerChoice])\r\n\r\n    \r\n\r\n    //store player choice object in state when player clicks on an object, trigger computer to choose an object\r\n    const handleChoiceClick = (object) => {        \r\n        updatePlayerChoice(object)\r\n        selectObject();        \r\n    }\r\n\r\n    //computer selects object based on id generated by function get random id\r\n    const selectObject = () => {\r\n        const selectedId = getRandomId(objects.length)\r\n        \r\n        //find object in array of onjects by id\r\n        const selectedObject = objects.find(obj => {\r\n            return obj.id === selectedId\r\n        })\r\n\r\n        updateComputerChoice(selectedObject)\r\n    }\r\n\r\n    //generate random number between 1 and the number of choices\r\n    const getRandomId = (max) => {      \r\n        const roundedInteger =  Math.floor((Math.random()*max) + 1); \r\n        return roundedInteger\r\n    }\r\n\r\n    //reset state after display result\r\n    const resetChoices = () => {\r\n        updatePlayerChoice(null)\r\n        updateComputerChoice(null)\r\n    }\r\n\r\n    const toggleShowResult = () => {\r\n        updateShowResult(!showResult)\r\n    }\r\n\r\n    const removeObject = (object) => { \r\n        const newObjects = objects.filter(obj => { \r\n            return obj.id !== object.id\r\n        })\r\n        updateObjects(newObjects)\r\n    }\r\n\r\n    const addObject = (object) => {\r\n        console.log(object)\r\n        const newObjectList = objects.concat(object)\r\n        updateObjects(newObjectList)\r\n    }\r\n\r\n\r\n    //based on state either render main menu or game or the result of the game or options\r\n    if (!showGame && !showOptions) {\r\n        return (\r\n            <div className=\"main-view\">\r\n                <h1>Kámen, nůžky, papír & jiné</h1>\r\n                <div>\r\n                    <button onClick={() => { updateShowGame(true) }} className=\"main-view-button\">Začít</button>\r\n                    <button onClick={() => { updateShowOptions(true)}}className=\"main-view-button\">Nastavení</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    if (showGame) {\r\n        if (!showResult) {\r\n            return (\r\n                <div>\r\n                    <Game objects={objects} handleChoiceClick={handleChoiceClick} />\r\n                    <button onClick={() => {updateShowGame(false)}}className=\"exit-button\">Zpět</button>\r\n                    <button onClick={() => {\r\n                        console.log(playerChoice)\r\n                        console.log(computerChoice)\r\n                        console.log(showResult)\r\n                    }\r\n                    }>check state</button>\r\n                </div>\r\n            )\r\n        }\r\n        if (showResult) {\r\n            return (\r\n                <Result result={gameResult} toggleShowResult={toggleShowResult} playerChoice={playerChoice} computerChoice={computerChoice} resetChoices={resetChoices}/>\r\n            )\r\n        }\r\n    }\r\n    if (showOptions) { \r\n        return (\r\n            <div>\r\n                 <button onClick={() => {updateShowOptions(false)}}className=\"exit-button\">Zpět</button>\r\n                <Options objects={objects} removeObject={removeObject} addObject={addObject} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App\r\n\r\n","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Game.js",[],"C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Object.js",[],"C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Result.js",[],"C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\Options.js",["36"],"import React, {useState} from 'react'\r\nimport ObjectListing from './ObjectListing'\r\nimport './Game.css'\r\n\r\nconst Options = ({ objects, removeObject, addObject }) => {\r\n\r\n    const newObject = {\r\n        id: (objects.length + 1),\r\n        name: '',\r\n        beatsId: [],\r\n    }\r\n\r\n    const listings = objects.map(object => { \r\n        return <ObjectListing object={object} removeObject={removeObject}/>\r\n    })\r\n\r\n    const beatsThisList = objects.map(object => {\r\n        return(\r\n            <div className=\"object-listing\">{object.name} <input id={object.id} type=\"checkbox\"onClick={(event) => {newObject.beatsId.push(parseInt(event.target.id)) }}></input></div>\r\n        )\r\n    })   \r\n\r\n    return (\r\n        <div className=\"game-container\">            \r\n            <h1>Objekty na výběr</h1>\r\n            <div>\r\n                {listings}\r\n            </div>\r\n            <h1>Přidat další</h1>\r\n            <div className=\"new-object-form\">\r\n                <h3 className=\"object-form-item\">Jméno</h3>\r\n                <input className=\"object-form-item\" onChange={(event) => {\r\n                    Object.assign(newObject, { name: event.target.value })                    \r\n                }}></input>                \r\n                <h3 className=\"object-form-item\">Poráží</h3>\r\n                {beatsThisList}\r\n                <button className=\"object-form-item\" onClick={() => { addObject(newObject) }}>Přidat další</button>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options","C:\\Users\\9gagger\\Desktop\\RPSM\\rps\\src\\ObjectListing.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":56,"column":29,"nodeType":"43","endLine":56,"endColumn":45,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":16,"nodeType":"47","messageId":"48","endLine":1,"endColumn":24},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'playerChoice' and 'toggleShowResult'. Either include them or remove the dependency array.","ArrayExpression",["51"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [computerChoice, playerChoice, toggleShowResult]",{"range":"54","text":"55"},[1958,1974],"[computerChoice, playerChoice, toggleShowResult]"]